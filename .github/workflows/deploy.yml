name: Deploy SilentCanary to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  EC2_HOST: 15.223.77.246
  EC2_USER: ubuntu
  APP_DIR: /opt/silentcanary

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Add EC2 to known hosts
      run: |
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        # Create deployment script
        cat > deploy_script.sh << 'EOF'
        #!/bin/bash
        set -e

        echo "🚀 Starting deployment..."

        # Navigate to app directory
        cd ${{ env.APP_DIR }}

        # Pull latest changes
        echo "📥 Pulling latest code..."
        git pull origin main

        # Update environment variables
        echo "⚙️ Updating environment..."
        # Ensure Redis uses Docker network
        if ! grep -q "REDIS_HOST=redis" .env; then
          echo "REDIS_HOST=redis" >> .env
        fi
        if ! grep -q "REDIS_ENDPOINT=" .env; then
          echo "REDIS_ENDPOINT=" >> .env
        fi

        # Stop current containers
        echo "🛑 Stopping current containers..."
        docker-compose down

        # Clean up old images
        echo "🧹 Cleaning up..."
        docker system prune -f

        # Build and start new containers
        echo "🔨 Building and starting containers..."
        docker-compose up -d --build

        # Wait for services to start
        echo "⏳ Waiting for services..."
        sleep 30

        # Health check
        echo "🔍 Running health check..."
        if curl -f http://localhost/health; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Health check failed"
          docker-compose logs
          exit 1
        fi
        EOF

        # Execute deployment script on EC2
        ssh -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_HOST }} "bash -s" < deploy_script.sh

    - name: Verify deployment
      run: |
        # Wait a bit more for full startup
        sleep 10

        # Test external access
        if curl -f http://${{ env.EC2_HOST }}/health; then
          echo "✅ External health check passed!"
        else
          echo "❌ External health check failed"
          exit 1
        fi

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "🎉 Deployment completed successfully!"
          echo "🌐 Application available at: http://silentcanary.com"
        else
          echo "❌ Deployment failed!"
        fi